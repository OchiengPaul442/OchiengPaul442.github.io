{"version":3,"file":"static/js/758.89f4e653.chunk.js","mappings":"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","sources":["components/upDateDetails/UpdateDetails.jsx","layout/Page.jsx","views/settings/Settings.jsx","../node_modules/@mui/icons-material/AutoFixHigh.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Slide } from '@mui/material'\r\nimport { useSelector } from 'react-redux'\r\nimport Comintro from '../../assets/images/comintro.jpg'\r\nimport { updateUserDetails } from '../../backend/auth'\r\n\r\n// Define the transition styles\r\nconst TransitionSlide = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />\r\n})\r\n\r\nconst UpdateDetails = ({ open, handleClose }) => {\r\n    const uid = useSelector((state) => state.auth.user.uid)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [errors, setErrors] = useState({})\r\n    const [values, setValues] = useState({\r\n        country: '',\r\n        location: '',\r\n        phoneNumber: '',\r\n    })\r\n\r\n    const validateField = (id, value) => {\r\n        let error = ''\r\n        if (value.trim() === '') {\r\n            error = 'This field is required'\r\n        } else if (\r\n            id === 'phoneNumber' &&\r\n            (!/^\\+?[1-9]\\d{1,14}$/.test(value) || value.length < 10)\r\n        ) {\r\n            error =\r\n                'Please enter a valid phone number with at least 10 digits e.g+256xxxx'\r\n        }\r\n        return error\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        const error = validateField(id, value)\r\n        setValues((prevValues) => ({ ...prevValues, [id]: value }))\r\n        setErrors((prevErrors) => ({ ...prevErrors, [id]: error }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        // Validate fields before submitting\r\n        let isValid = true\r\n        const newErrors = {}\r\n        for (let field in values) {\r\n            const error = validateField(field, values[field])\r\n            newErrors[field] = error\r\n            if (error) {\r\n                isValid = false\r\n            }\r\n        }\r\n        setErrors(newErrors)\r\n\r\n        // If no errors, submit the form\r\n        if (isValid) {\r\n            setDisabled(true)\r\n            updateUserDetails(uid, values)\r\n                .then(() => {\r\n                    handleClose()\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    setDisabled(false)\r\n                })\r\n        } else {\r\n            console.log('Invalid form submission')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                margin: 0,\r\n                padding: '10px',\r\n                display: open ? 'block' : 'none',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                zIndex: 9999,\r\n            }}\r\n        >\r\n            <TransitionSlide in={open}>\r\n                <div\r\n                    style={{\r\n                        backgroundColor: 'white',\r\n                        maxWidth: '850px',\r\n                        width: '100%',\r\n                        height: 'auto',\r\n                        margin: '50px auto',\r\n                        borderRadius: '10px',\r\n                    }}\r\n                >\r\n                    <div className=\"lg:grid lg:grid-cols-2 lg:gap-0 p-0 m-0 w-full\">\r\n                        <div\r\n                            style={{\r\n                                height: window.innerWidth <= 768 ? '200px' : '',\r\n                            }}\r\n                            className=\"flex-1 relative lg:h-auto\"\r\n                        >\r\n                            <img\r\n                                style={{\r\n                                    height:\r\n                                        window.innerWidth <= 768 ? '200px' : '',\r\n                                }}\r\n                                src={Comintro}\r\n                                alt=\"Community\"\r\n                                className=\"w-full h-auto object-cover\"\r\n                            />\r\n                            <div\r\n                                style={{\r\n                                    display:\r\n                                        window.innerWidth <= 768 ? 'none' : '',\r\n                                    background:\r\n                                        window.innerWidth <= 768\r\n                                            ? ''\r\n                                            : 'linear-gradient(to top, rgba(28,39,76,0.8) 40%, rgba(28,39,76,0) 100%)',\r\n                                }}\r\n                                className=\"xs:bg-gradient-to-t from-blue-900 via-blue-900 to-transparent lg:bg-gradient-to-t lg:absolute lg:bottom-0 lg:right-0 text-white p-5 text-3xl\"\r\n                            >\r\n                                Thank you for joining our community! Please\r\n                                update your details before proceeding.\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{\r\n                                flex: window.innerWidth <= 768 ? '' : '1 1 50%',\r\n                                padding: window.innerWidth <= 768 ? '' : '1em',\r\n                            }}\r\n                        >\r\n                            <form\r\n                                style={{\r\n                                    padding:\r\n                                        window.innerWidth <= 768 ? '1em' : '',\r\n                                }}\r\n                                onSubmit={handleSubmit}\r\n                            >\r\n                                <h2\r\n                                    style={{\r\n                                        color: 'black',\r\n                                        marginBottom: '1em',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    <span\r\n                                        style={{\r\n                                            fontWeight: 'bold',\r\n                                            fontSize: '1.5em',\r\n                                            textAlign: 'left',\r\n                                            textTransform: 'uppercase',\r\n                                            letterSpacing: '0.1em',\r\n                                            lineHeight: '1.0em',\r\n                                        }}\r\n                                    >\r\n                                        Welcome to Our Community!\r\n                                    </span>\r\n                                    <small className=\"mt-2\">\r\n                                        Complete your profile to continue.\r\n                                    </small>\r\n                                </h2>\r\n                                <div\r\n                                    style={{\r\n                                        marginBottom:\r\n                                            window.innerWidth <= 768\r\n                                                ? ''\r\n                                                : '5px',\r\n                                    }}\r\n                                >\r\n                                    <label\r\n                                        htmlFor=\"country\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        Country\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"country\"\r\n                                        value={values.country}\r\n                                        onChange={handleChange}\r\n                                        className={`block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 ${\r\n                                            errors.country\r\n                                                ? 'border-red-500'\r\n                                                : ''\r\n                                        }`}\r\n                                        onBlur={(e) =>\r\n                                            validateField(\r\n                                                e.target.id,\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                    {errors.country && (\r\n                                        <small style={{ color: 'red' }}>\r\n                                            {errors.country}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        marginBottom:\r\n                                            window.innerWidth <= 768\r\n                                                ? ''\r\n                                                : '5px',\r\n                                    }}\r\n                                >\r\n                                    <label\r\n                                        htmlFor=\"location\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        Address / location\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"location\"\r\n                                        value={values.location}\r\n                                        onChange={handleChange}\r\n                                        className={`block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 ${\r\n                                            errors.location\r\n                                                ? 'border-red-500'\r\n                                                : ''\r\n                                        }`}\r\n                                        onBlur={(e) =>\r\n                                            validateField(\r\n                                                e.target.id,\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                    {errors.location && (\r\n                                        <small style={{ color: 'red' }}>\r\n                                            {errors.location}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        marginBottom:\r\n                                            window.innerWidth <= 768\r\n                                                ? ''\r\n                                                : '5px',\r\n                                    }}\r\n                                >\r\n                                    <label\r\n                                        htmlFor=\"phoneNumber\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        Phone Number\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        id=\"phoneNumber\"\r\n                                        value={values.phoneNumber}\r\n                                        onChange={handleChange}\r\n                                        className={`block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 ${\r\n                                            errors.phoneNumber\r\n                                                ? 'border-red-500'\r\n                                                : ''\r\n                                        }`}\r\n                                        onBlur={(e) =>\r\n                                            validateField(\r\n                                                e.target.id,\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                    {errors.phoneNumber && (\r\n                                        <small style={{ color: 'red' }}>\r\n                                            {errors.phoneNumber}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                                {/* Add more fields as necessary */}\r\n                                <div className=\"flex justify-end w-full\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className={`${\r\n                                            disabled\r\n                                                ? 'bg-gray-400 cursor-not-allowed'\r\n                                                : 'bg-green-600 hover:bg-green-700'\r\n                                        } w-full py-2 mt-4 text-sm font-medium text-white transition duration-300 ease-in-out transform rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500`}\r\n                                    >\r\n                                        Update Details\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </TransitionSlide>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateDetails\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { checkIfUserHasPhoneNumber } from '../backend/auth'\r\nimport UpdateDetails from '../components/upDateDetails/UpdateDetails'\r\n\r\nconst TopBar = React.lazy(() => import('../components/topBar/TopBar'))\r\nconst SideBar = React.lazy(() => import('../components/sideBar/SideBar'))\r\n\r\nconst Page = ({ children, title }) => {\r\n    const [showSideBar, setShowSideBar] = useState(false)\r\n    const uid = useSelector((state) => state.auth?.user?.uid)\r\n    const token = useSelector((state) => state.auth?.accessToken?.token)\r\n    const anonymous = useSelector((state) => state.auth?.accessToken?.anonymous)\r\n    const [updateDetailsModal, setUpdateDetailsModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false\r\n\r\n        const fetchUserDetails = async () => {\r\n            if (uid && token && !anonymous) {\r\n                const res = await checkIfUserHasPhoneNumber(uid)\r\n                if (!isCancelled && res && !res.hasPhoneNumber) {\r\n                    setUpdateDetailsModal(true)\r\n                } else {\r\n                    setUpdateDetailsModal(false)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchUserDetails()\r\n\r\n        return () => {\r\n            isCancelled = true\r\n        }\r\n    }, [uid, token, anonymous])\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            if (window.innerWidth < 640 && !showSideBar) {\r\n                setShowSideBar(true)\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [showSideBar])\r\n\r\n    return (\r\n        <>\r\n            <TopBar\r\n                onClick={() => setShowSideBar(!showSideBar)}\r\n                value={showSideBar}\r\n            />\r\n            <SideBar show={showSideBar} setShowSideBar={setShowSideBar} />\r\n            <div className={`p-4 sm:ml-64`}>\r\n                <div className=\"mt-20 lg:mt-14 h-full lg:mx-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        {title && (\r\n                            <h1 className=\"text-lg lg:text-4xl font-bold text-gray-800 dark:text-white\">\r\n                                {title}\r\n                            </h1>\r\n                        )}\r\n                    </div>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n            {!anonymous && token && (\r\n                <UpdateDetails\r\n                    open={updateDetailsModal}\r\n                    handleClose={() => setUpdateDetailsModal(false)}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","import React, { useState } from 'react'\r\nimport Page from '../../layout/Page'\r\nimport { useSelector } from 'react-redux'\r\nimport { Loader } from '../../components'\r\nimport { updateUserDetails, changePassword } from '../../backend/auth'\r\nimport Alert from '@mui/material/Alert'\r\nimport Visibility from '@mui/icons-material/Visibility'\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\r\nimport { Avatar } from '@mui/material'\r\nimport { uploadProfilePicture } from '../../backend/auth'\r\nimport AutoFixHighIcon from '@mui/icons-material/AutoFixHigh'\r\n\r\nconst Settings = () => {\r\n    const photoURL = useSelector((state) => state.auth.user.photoURL)\r\n    const userId = useSelector((state) => state.auth.user.uid)\r\n    const displayName = useSelector((state) => state.auth.user.displayName)\r\n    const email = useSelector((state) => state.auth.user.email)\r\n    const country = useSelector((state) => state.auth.user.country)\r\n    const location = useSelector((state) => state.auth.user.location)\r\n    const phoneNumber = useSelector((state) => state.auth.user.phoneNumber)\r\n    const [state, setState] = useState({\r\n        displayName: displayName,\r\n        email: email,\r\n        country: country,\r\n        location: location,\r\n        phoneNumber: phoneNumber,\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n    })\r\n    const [checks, setChecks] = useState({\r\n        update: false,\r\n        pwd: false,\r\n    })\r\n\r\n    const [loading, setLoading] = useState({\r\n        pwd: false,\r\n        delete: false,\r\n        update: false,\r\n        upload: false,\r\n    })\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const [showPassword, setShowPassword] = useState({})\r\n\r\n    const togglePasswordVisibility = (id) => {\r\n        setShowPassword({ ...showPassword, [id]: !showPassword[id] })\r\n    }\r\n\r\n    const validateField = (name, value) => {\r\n        if (value.trim() === '') {\r\n            return `${name} is required`\r\n        } else if (name === 'email') {\r\n            const re = /\\S+@\\S+\\.\\S+/\r\n            if (!re.test(value)) {\r\n                return 'Email address is invalid'\r\n            }\r\n        } else if (name === 'phoneNumber') {\r\n            const re = /^\\+?\\d+$/\r\n            if (!re.test(value)) {\r\n                return 'Phone number is invalid'\r\n            }\r\n        } else if (\r\n            name === 'newPassword' ||\r\n            name === 'oldPassword' ||\r\n            name === 'confirmPassword'\r\n        ) {\r\n            if (value.length < 6) {\r\n                return 'Password must be at least 6 characters'\r\n            }\r\n\r\n            if (name === 'confirmPassword') {\r\n                if (value !== state.newPassword) {\r\n                    return 'Passwords do not match'\r\n                }\r\n            }\r\n        }\r\n        return ''\r\n    }\r\n\r\n    const clearChange = () => {\r\n        setState({\r\n            displayName: displayName,\r\n            email: email,\r\n            country: country,\r\n            location: location,\r\n            phoneNumber: phoneNumber,\r\n        })\r\n        setChecks({\r\n            update: false,\r\n        })\r\n    }\r\n\r\n    const clearPwdChange = () => {\r\n        setState({\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n        })\r\n        setChecks({\r\n            pwd: false,\r\n        })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        const newState = { ...state, [name]: value }\r\n        setState(newState)\r\n        handleErrors(e)\r\n\r\n        const fields = [\r\n            'displayName',\r\n            'email',\r\n            'country',\r\n            'location',\r\n            'phoneNumber',\r\n            'oldPassword',\r\n            'newPassword',\r\n            'confirmPassword',\r\n        ]\r\n        const checks = fields.some((field) => newState[field] !== state[field])\r\n        if (checks) {\r\n            if (\r\n                name !== 'oldPassword' &&\r\n                name !== 'newPassword' &&\r\n                name !== 'confirmPassword'\r\n            ) {\r\n                setChecks({\r\n                    update: true,\r\n                })\r\n            } else {\r\n                setChecks({\r\n                    pwd: true,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleErrors = (e) => {\r\n        const { name, value } = e.target\r\n        setErrors({ ...errors, [name]: validateField(name, value) })\r\n    }\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault()\r\n        // Validate fields before submitting\r\n        const isValid = !Object.values(errors).some(Boolean)\r\n        // If no errors, submit the form\r\n        if (isValid) {\r\n            setLoading({ ...loading, update: true })\r\n            const userData = {\r\n                displayName: state.displayName,\r\n                email: state.email,\r\n                country: state.country,\r\n                location: state.location,\r\n                phoneNumber: state.phoneNumber,\r\n            }\r\n            try {\r\n                await updateUserDetails(userId, userData)\r\n                setLoading({ ...loading, update: false })\r\n                setChecks({\r\n                    update: false,\r\n                })\r\n                setErrors({\r\n                    general: 'Profile updated successfully',\r\n                    type: 'success',\r\n                    form: 'update',\r\n                })\r\n            } catch (err) {\r\n                console.log(err)\r\n                setLoading({ ...loading, update: false })\r\n                setErrors({\r\n                    general: err.message,\r\n                    type: 'error',\r\n                    form: 'update',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePwdChange = async (e) => {\r\n        e.preventDefault()\r\n        const isValid = !Object.values(errors).some(Boolean)\r\n        if (isValid) {\r\n            setLoading({ ...loading, pwd: true })\r\n            try {\r\n                await changePassword(state.oldPassword, state.newPassword)\r\n                    .then((res) => {\r\n                        if (res.success === true) {\r\n                            setErrors({\r\n                                general: res.message,\r\n                                type: 'success',\r\n                                form: 'pwd',\r\n                            })\r\n                        } else {\r\n                            setErrors({\r\n                                general: res.message,\r\n                                type: 'error',\r\n                                form: 'pwd',\r\n                            })\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        setErrors({\r\n                            general: err.message,\r\n                            type: 'error',\r\n                            form: 'pwd',\r\n                        })\r\n                    })\r\n\r\n                clearPwdChange()\r\n            } catch (err) {\r\n                setErrors({\r\n                    general: err?.message,\r\n                    type: 'error',\r\n                    form: 'pwd',\r\n                })\r\n            } finally {\r\n                setLoading({ ...loading, pwd: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    // State for random banner color and avatar image upload\r\n    const [randomBannerColor, setRandomBannerColor] = useState(getRandomColor())\r\n    const [avatarImage, setAvatarImage] = useState(null)\r\n\r\n    // Function to generate a random color for the banner\r\n    function getRandomColor() {\r\n        const letters = '0123456789ABCDEF'\r\n        let color = '#'\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)]\r\n        }\r\n        return color\r\n    }\r\n\r\n    // Function to handle avatar image upload\r\n    const handleAvatarUpload = async (event) => {\r\n        const file = event.target.files[0]\r\n        if (!file) return\r\n\r\n        setAvatarImage(file)\r\n        setLoading((prevLoading) => ({ ...prevLoading, upload: true }))\r\n\r\n        try {\r\n            // Upload the image to the server\r\n            await uploadProfilePicture(userId, file)\r\n            setErrors({\r\n                general: 'Profile picture updated successfully',\r\n                type: 'success',\r\n                form: 'upload',\r\n            })\r\n        } catch (err) {\r\n            setErrors({\r\n                general: err.message,\r\n                type: 'error',\r\n                form: 'upload',\r\n            })\r\n        } finally {\r\n            setLoading((prevLoading) => ({ ...prevLoading, upload: false }))\r\n            // clear the input file\r\n            event.target.value = ''\r\n            setAvatarImage(null)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page title=\"Account Settings\">\r\n            {/* alert image upload */}\r\n            {errors.general && errors.form === 'upload' && (\r\n                <Alert\r\n                    className=\"mb-4\"\r\n                    severity={errors.type}\r\n                    onClose={() => setErrors({ ...errors, general: '' })}\r\n                    sx={{ mt: 2 }}\r\n                >\r\n                    {errors.general}\r\n                </Alert>\r\n            )}\r\n\r\n            {/* Banner */}\r\n            <div className=\"relative mb-4\">\r\n                {/* Banner with random background color */}\r\n                <div\r\n                    className=\"h-40 relative cursor-pointer rounded-md overflow-hidden\"\r\n                    style={{\r\n                        backgroundColor: randomBannerColor, // Use random color\r\n                    }}\r\n                    onClick={() => {\r\n                        // Trigger the input file click when the user clicks on the banner\r\n                        document.getElementById('avatar-upload').click()\r\n                    }}\r\n                >\r\n                    {/* Overlay */}\r\n                    <div className=\"absolute inset-0 bg-black opacity-40\"></div>\r\n                    {/* Hover overlay */}\r\n                    <div className=\"absolute inset-0 flex items-center justify-center opacity-0 transition-opacity hover:opacity-100 w-full h-full\">\r\n                        <p className=\"text-white text-xl font-semibold\">\r\n                            Upload Profile Avatar\r\n                        </p>\r\n                    </div>\r\n                    {loading.upload && (\r\n                        <div className=\"w-full h-full flex justify-center items-center\">\r\n                            <Loader width={250} height={250} />\r\n                        </div>\r\n                    )}\r\n                    {/* Edit button */}\r\n                    <span className=\"absolute top-0 right-0 m-4 bg-white p-2 rounded-full\">\r\n                        <AutoFixHighIcon />\r\n                    </span>\r\n                    {/* Profile details */}\r\n                    <div className=\"absolute inset-x-0 bottom-0 p-4 text-white\">\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <label className=\"flex-shrink-0\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    id=\"avatar-upload\"\r\n                                    className=\"sr-only\"\r\n                                    onChange={handleAvatarUpload}\r\n                                />\r\n                                <Avatar\r\n                                    alt=\"User avatar\"\r\n                                    src={photoURL}\r\n                                    className=\"w-16 h-16 rounded-full ring-2 ring-white\"\r\n                                />\r\n                            </label>\r\n                            <div>\r\n                                <h1 className=\"text-2xl font-semibold\">\r\n                                    {displayName}\r\n                                </h1>\r\n                                <p className=\"text-lg\">{/* Job Title */}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* grid with two columns responsive also */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:px-4\">\r\n                <div className=\"col-span-1\">\r\n                    <form\r\n                        onSubmit={handleUpdate}\r\n                        className=\"flex flex-col gap-4\"\r\n                    >\r\n                        <h2 className=\"text-2xl font-bold text-gray-500\">\r\n                            Profile Details\r\n                        </h2>\r\n                        <p className=\"text-gray-500\">\r\n                            Change your profile details\r\n                        </p>\r\n\r\n                        {errors.general && errors.form === 'update' && (\r\n                            <Alert\r\n                                severity={errors.type}\r\n                                onClose={() =>\r\n                                    setErrors({ ...errors, general: '' })\r\n                                }\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                {errors.general}\r\n                            </Alert>\r\n                        )}\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"displayName\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Display Name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"displayName\"\r\n                                name=\"displayName\"\r\n                                value={state.displayName}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.displayName ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.displayName && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.displayName}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label htmlFor=\"email\" className=\"text-gray-500\">\r\n                                Email\r\n                            </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.email ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.email && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.email}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label htmlFor=\"country\" className=\"text-gray-500\">\r\n                                Country\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"_country\"\r\n                                name=\"country\"\r\n                                value={state.country}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.country ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.country && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.country}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label htmlFor=\"location\" className=\"text-gray-500\">\r\n                                Address / location\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"_location\"\r\n                                name=\"location\"\r\n                                value={state.location}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.location ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.location && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.location}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"phoneNumber\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Phone Number\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"phone_Number\"\r\n                                name=\"phoneNumber\"\r\n                                value={state.phoneNumber}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.phoneNumber ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.phoneNumber && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.phoneNumber}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* button */}\r\n                        <div className=\"mt-4 flex items-center gap-2\">\r\n                            {loading.update ? (\r\n                                <Loader width={200} height={200} />\r\n                            ) : (\r\n                                <button\r\n                                    className=\"bg-green-700 text-white px-4 py-2 rounded-md\"\r\n                                    onClick={handleUpdate}\r\n                                >\r\n                                    Save Changes\r\n                                </button>\r\n                            )}\r\n\r\n                            {/* if state is in intial state dont show else show */}\r\n                            {checks.update && (\r\n                                <button\r\n                                    className=\"bg-gray-500 text-white px-4 py-2 rounded-md\"\r\n                                    onClick={clearChange}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-span-1\">\r\n                    <form className=\"flex flex-col gap-4\">\r\n                        <h2 className=\"text-2xl font-bold text-gray-500\">\r\n                            Password & Security Reset\r\n                        </h2>\r\n                        <p className=\"text-gray-500\">Change your password</p>\r\n\r\n                        {errors.general && errors.form === 'pwd' && (\r\n                            <Alert\r\n                                severity={errors.type}\r\n                                onClose={() =>\r\n                                    setErrors({ ...errors, general: '' })\r\n                                }\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                {errors.general}\r\n                            </Alert>\r\n                        )}\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"newPassword\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Old Password\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={\r\n                                        showPassword['oldpassword']\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                    }\r\n                                    id=\"oldpassword\"\r\n                                    name=\"oldPassword\"\r\n                                    value={state.oldPassword}\r\n                                    onChange={handleChange}\r\n                                    className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                        errors.oldpassword\r\n                                            ? 'border-red-500'\r\n                                            : ''\r\n                                    }`}\r\n                                />\r\n                                <div\r\n                                    onClick={() =>\r\n                                        togglePasswordVisibility('oldpassword')\r\n                                    }\r\n                                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5 cursor-pointer\"\r\n                                >\r\n                                    {showPassword['oldpassword'] ? (\r\n                                        <Visibility />\r\n                                    ) : (\r\n                                        <VisibilityOff />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {errors.oldpassword && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.oldpassword}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"newPassword\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                New Password\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={\r\n                                        showPassword['newPassword']\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                    }\r\n                                    id=\"newPassword\"\r\n                                    name=\"newPassword\"\r\n                                    value={state.newPassword}\r\n                                    onChange={handleChange}\r\n                                    className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                        errors.newPassword\r\n                                            ? 'border-red-500'\r\n                                            : ''\r\n                                    }`}\r\n                                />\r\n                                <div\r\n                                    onClick={() =>\r\n                                        togglePasswordVisibility('newPassword')\r\n                                    }\r\n                                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5 cursor-pointer\"\r\n                                >\r\n                                    {showPassword['newPassword'] ? (\r\n                                        <Visibility />\r\n                                    ) : (\r\n                                        <VisibilityOff />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {errors.newPassword && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.newPassword}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"confirmPassword\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Confirm Password\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={\r\n                                        showPassword['confirmPassword']\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                    }\r\n                                    id=\"confirmPassword\"\r\n                                    name=\"confirmPassword\"\r\n                                    value={state.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                    className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                        errors.confirmPassword\r\n                                            ? 'border-red-500'\r\n                                            : ''\r\n                                    }`}\r\n                                />\r\n                                <div\r\n                                    onClick={() =>\r\n                                        togglePasswordVisibility(\r\n                                            'confirmPassword'\r\n                                        )\r\n                                    }\r\n                                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5 cursor-pointer\"\r\n                                >\r\n                                    {showPassword['confirmPassword'] ? (\r\n                                        <Visibility />\r\n                                    ) : (\r\n                                        <VisibilityOff />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {errors.confirmPassword && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.confirmPassword}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* button */}\r\n                        <div className=\"mt-4\">\r\n                            <button\r\n                                onClick={handlePwdChange}\r\n                                className=\"bg-red-700 text-white px-4 py-2 rounded-md\"\r\n                            >\r\n                                {loading.pwd ? (\r\n                                    <Loader width={200} height={200} />\r\n                                ) : (\r\n                                    ' Reset password'\r\n                                )}\r\n                            </button>\r\n\r\n                            {checks.pwd && (\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"bg-gray-500 text-white px-4 py-2 rounded-md ml-4\"\r\n                                    onClick={clearPwdChange}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.5 5.6 10 7 8.6 4.5 10 2 7.5 3.4 5 2l1.4 2.5L5 7zm12 9.8L17 14l1.4 2.5L17 19l2.5-1.4L22 19l-1.4-2.5L22 14zM22 2l-2.5 1.4L17 2l1.4 2.5L17 7l2.5-1.4L22 7l-1.4-2.5zm-7.63 5.29a.9959.9959 0 0 0-1.41 0L1.29 18.96c-.39.39-.39 1.02 0 1.41l2.34 2.34c.39.39 1.02.39 1.41 0L16.7 11.05c.39-.39.39-1.02 0-1.41l-2.33-2.35zm-1.03 5.49-2.12-2.12 2.44-2.44 2.12 2.12-2.44 2.44z\"\n}), 'AutoFixHigh');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["TransitionSlide","React","props","ref","_jsx","Slide","_objectSpread","direction","_ref","open","handleClose","uid","useSelector","state","auth","user","_useState","useState","_useState2","_slicedToArray","disabled","setDisabled","_useState3","_useState4","errors","setErrors","_useState5","country","location","phoneNumber","_useState6","values","setValues","validateField","id","value","error","trim","test","length","handleChange","e","_e$target","target","prevValues","_defineProperty","prevErrors","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","newErrors","field","wrap","_context","prev","next","preventDefault","updateUserDetails","then","catch","err","console","log","stop","_x","apply","arguments","style","margin","padding","display","position","top","left","width","height","backgroundColor","zIndex","children","in","maxWidth","borderRadius","_jsxs","className","window","innerWidth","src","Comintro","alt","background","flex","onSubmit","color","marginBottom","flexDirection","fontWeight","fontSize","textAlign","textTransform","letterSpacing","lineHeight","htmlFor","type","onChange","concat","onBlur","TopBar","SideBar","title","showSideBar","setShowSideBar","_state$auth","_state$auth$user","token","_state$auth2","_state$auth2$accessTo","accessToken","anonymous","_state$auth3","_state$auth3$accessTo","updateDetailsModal","setUpdateDetailsModal","useEffect","isCancelled","fetchUserDetails","res","checkIfUserHasPhoneNumber","sent","hasPhoneNumber","handleResize","addEventListener","removeEventListener","_Fragment","onClick","show","UpdateDetails","photoURL","userId","displayName","email","oldPassword","newPassword","confirmPassword","setState","update","pwd","checks","setChecks","delete","upload","loading","setLoading","_useState7","_useState8","_useState9","_useState10","showPassword","setShowPassword","togglePasswordVisibility","clearPwdChange","name","newState","handleErrors","some","_e$target2","handleUpdate","userData","Object","Boolean","general","form","t0","message","handlePwdChange","_callee2","_context2","changePassword","success","finish","_x2","_useState11","i","Math","floor","random","getRandomColor","_useState12","randomBannerColor","_useState13","_useState14","setAvatarImage","handleAvatarUpload","_ref3","_callee3","event","file","_context3","files","abrupt","prevLoading","uploadProfilePicture","_x3","Page","Alert","severity","onClose","sx","mt","document","getElementById","click","Loader","AutoFixHighIcon","accept","Avatar","oldpassword","Visibility","VisibilityOff","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}