{"version":3,"file":"static/js/116.ae0ebbf8.chunk.js","mappings":"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","sources":["views/settings/Settings.jsx","../node_modules/@mui/icons-material/AutoFixHigh.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Page from '../../layout/Page'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Loader } from '../../components'\r\nimport { updateUserDetails, changePassword } from '../../backend/auth'\r\nimport Alert from '@mui/material/Alert'\r\nimport Visibility from '@mui/icons-material/Visibility'\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\r\nimport { Avatar } from '@mui/material'\r\nimport { uploadProfilePicture } from '../../backend/auth'\r\nimport AutoFixHighIcon from '@mui/icons-material/AutoFixHigh'\r\nimport { auth } from '../../config/firebase'\r\nimport { SettingsSkeleton } from '../../components/Skeletons'\r\n\r\nconst Settings = () => {\r\n    const dispatch = useDispatch()\r\n    const photoURL = useSelector((state) => state.auth.user.photoURL)\r\n    const userId = useSelector((state) => state.auth.user.uid)\r\n    const displayName = useSelector((state) => state.auth.user.displayName)\r\n    const email = useSelector((state) => state.auth.user.email)\r\n    const country = useSelector((state) => state.auth.user.country)\r\n    const location = useSelector((state) => state.auth.user.location)\r\n    const phoneNumber = useSelector((state) => state.auth.user.phoneNumber)\r\n    const [state, setState] = useState({\r\n        displayName: displayName,\r\n        email: email,\r\n        country: country,\r\n        location: location,\r\n        phoneNumber: phoneNumber,\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n    })\r\n    const [checks, setChecks] = useState({\r\n        update: false,\r\n        pwd: false,\r\n    })\r\n\r\n    const [loading, setLoading] = useState({\r\n        pwd: false,\r\n        delete: false,\r\n        update: false,\r\n        upload: false,\r\n    })\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const [showPassword, setShowPassword] = useState({})\r\n\r\n    const togglePasswordVisibility = (id) => {\r\n        setShowPassword({ ...showPassword, [id]: !showPassword[id] })\r\n    }\r\n\r\n    const validateField = (name, value) => {\r\n        if (value.trim() === '') {\r\n            return `${name} is required`\r\n        } else if (name === 'email') {\r\n            const re = /\\S+@\\S+\\.\\S+/\r\n            if (!re.test(value)) {\r\n                return 'Email address is invalid'\r\n            }\r\n        } else if (name === 'phoneNumber') {\r\n            const re = /^\\+?\\d+$/\r\n            if (!re.test(value)) {\r\n                return 'Phone number is invalid'\r\n            }\r\n        } else if (\r\n            name === 'newPassword' ||\r\n            name === 'oldPassword' ||\r\n            name === 'confirmPassword'\r\n        ) {\r\n            if (value.length < 6) {\r\n                return 'Password must be at least 6 characters'\r\n            }\r\n\r\n            if (name === 'confirmPassword') {\r\n                if (value !== state.newPassword) {\r\n                    return 'Passwords do not match'\r\n                }\r\n            }\r\n        }\r\n        return ''\r\n    }\r\n\r\n    const clearChange = () => {\r\n        setState({\r\n            displayName: displayName,\r\n            email: email,\r\n            country: country,\r\n            location: location,\r\n            phoneNumber: phoneNumber,\r\n        })\r\n        setChecks({\r\n            update: false,\r\n        })\r\n    }\r\n\r\n    const clearPwdChange = () => {\r\n        setState({\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n        })\r\n        setChecks({\r\n            pwd: false,\r\n        })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        const newState = { ...state, [name]: value }\r\n        setState(newState)\r\n        handleErrors(e)\r\n\r\n        const fields = [\r\n            'displayName',\r\n            'email',\r\n            'country',\r\n            'location',\r\n            'phoneNumber',\r\n            'oldPassword',\r\n            'newPassword',\r\n            'confirmPassword',\r\n        ]\r\n        const checks = fields.some((field) => newState[field] !== state[field])\r\n        if (checks) {\r\n            if (\r\n                name !== 'oldPassword' &&\r\n                name !== 'newPassword' &&\r\n                name !== 'confirmPassword'\r\n            ) {\r\n                setChecks({\r\n                    update: true,\r\n                })\r\n            } else {\r\n                setChecks({\r\n                    pwd: true,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleErrors = (e) => {\r\n        const { name, value } = e.target\r\n        setErrors({ ...errors, [name]: validateField(name, value) })\r\n    }\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault()\r\n        // Validate fields before submitting\r\n        const isValid = !Object.values(errors).some(Boolean)\r\n        // If no errors, submit the form\r\n        if (isValid) {\r\n            setLoading({ ...loading, update: true })\r\n            const userData = {\r\n                displayName: state.displayName,\r\n                email: state.email,\r\n                country: state.country,\r\n                location: state.location,\r\n                phoneNumber: state.phoneNumber,\r\n            }\r\n            try {\r\n                await updateUserDetails(userId, userData)\r\n                setLoading({ ...loading, update: false })\r\n                setChecks({\r\n                    update: false,\r\n                })\r\n                setErrors({\r\n                    general: 'Profile updated successfully',\r\n                    type: 'success',\r\n                    form: 'update',\r\n                })\r\n\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    payload: {\r\n                        ...state,\r\n                        displayName: state.displayName,\r\n                        email: state.email,\r\n                        country: state.country,\r\n                        location: state.location,\r\n                        phoneNumber: state.phoneNumber,\r\n                    },\r\n                })\r\n            } catch (err) {\r\n                console.log(err)\r\n                setLoading({ ...loading, update: false })\r\n                setErrors({\r\n                    general: err.message,\r\n                    type: 'error',\r\n                    form: 'update',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePwdChange = async (e) => {\r\n        e.preventDefault()\r\n        const isValid = !Object.values(errors).some(Boolean)\r\n        if (isValid) {\r\n            setLoading({ ...loading, pwd: true })\r\n            try {\r\n                await changePassword(state.oldPassword, state.newPassword)\r\n                    .then((res) => {\r\n                        if (res.success === true) {\r\n                            setErrors({\r\n                                general: res.message,\r\n                                type: 'success',\r\n                                form: 'pwd',\r\n                            })\r\n                        } else {\r\n                            setErrors({\r\n                                general: res.message,\r\n                                type: 'error',\r\n                                form: 'pwd',\r\n                            })\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        setErrors({\r\n                            general: err.message,\r\n                            type: 'error',\r\n                            form: 'pwd',\r\n                        })\r\n                    })\r\n\r\n                clearPwdChange()\r\n            } catch (err) {\r\n                setErrors({\r\n                    general: err?.message,\r\n                    type: 'error',\r\n                    form: 'pwd',\r\n                })\r\n            } finally {\r\n                setLoading({ ...loading, pwd: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    // Function to generate a random color for the banner\r\n    const getRandomColor = () => {\r\n        const letters = '0123456789ABCDEF'\r\n        let color = '#'\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)]\r\n        }\r\n        return color\r\n    }\r\n\r\n    // State for random banner color and avatar image upload\r\n    const randomBannerColor = getRandomColor()\r\n\r\n    // Function to handle avatar image upload\r\n    const handleAvatarUpload = async (event) => {\r\n        const file = event.target.files[0]\r\n        if (!file) return\r\n\r\n        setLoading((prevLoading) => ({ ...prevLoading, upload: true }))\r\n\r\n        try {\r\n            // Upload the image to the server\r\n            await uploadProfilePicture(userId, file)\r\n            setErrors({\r\n                general: 'Profile picture updated successfully',\r\n                type: 'success',\r\n                form: 'upload',\r\n            })\r\n\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                payload: {\r\n                    ...state,\r\n                    photoURL: URL.createObjectURL(file),\r\n                },\r\n            })\r\n        } catch (err) {\r\n            setErrors({\r\n                general: err.message,\r\n                type: 'error',\r\n                form: 'upload',\r\n            })\r\n        } finally {\r\n            setLoading((prevLoading) => ({ ...prevLoading, upload: false }))\r\n            // clear the input file\r\n            event.target.value = ''\r\n        }\r\n    }\r\n\r\n    return auth.currentUser ? (\r\n        <Page title=\"Account Settings\">\r\n            {/* alert image upload */}\r\n            {errors.general && errors.form === 'upload' && (\r\n                <Alert\r\n                    className=\"mb-4\"\r\n                    severity={errors.type}\r\n                    onClose={() => setErrors({ ...errors, general: '' })}\r\n                    sx={{ mt: 2 }}\r\n                >\r\n                    {errors.general}\r\n                </Alert>\r\n            )}\r\n\r\n            {/* Banner */}\r\n            <div className=\"relative mb-4\">\r\n                {/* Banner with random background color */}\r\n                <div\r\n                    className=\"h-40 relative cursor-pointer rounded-md overflow-hidden\"\r\n                    style={{\r\n                        backgroundColor: randomBannerColor, // Use random color\r\n                    }}\r\n                    onClick={() => {\r\n                        // Trigger the input file click when the user clicks on the banner\r\n                        document.getElementById('avatar-upload').click()\r\n                    }}\r\n                >\r\n                    {/* Overlay */}\r\n                    <div className=\"absolute inset-0 bg-black opacity-40\"></div>\r\n                    {/* Hover overlay */}\r\n                    <div className=\"absolute inset-0 flex items-center justify-center opacity-0 transition-opacity hover:opacity-100 w-full h-full\">\r\n                        <p className=\"text-white text-xl font-semibold\">\r\n                            Upload Profile Avatar\r\n                        </p>\r\n                    </div>\r\n                    {loading.upload && (\r\n                        <div className=\"w-full h-full flex justify-center items-center\">\r\n                            <Loader width={250} height={250} />\r\n                        </div>\r\n                    )}\r\n                    {/* Edit button */}\r\n                    <span className=\"absolute top-0 right-0 m-4 bg-white p-2 rounded-full\">\r\n                        <AutoFixHighIcon />\r\n                    </span>\r\n                    {/* Profile details */}\r\n                    <div className=\"absolute inset-x-0 bottom-0 p-4 text-white\">\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <label className=\"flex-shrink-0\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    id=\"avatar-upload\"\r\n                                    className=\"sr-only\"\r\n                                    onChange={handleAvatarUpload}\r\n                                />\r\n                                <Avatar\r\n                                    alt=\"User avatar\"\r\n                                    src={photoURL}\r\n                                    className=\"w-16 h-16 rounded-full ring-2 ring-white\"\r\n                                />\r\n                            </label>\r\n                            <div>\r\n                                <h1 className=\"text-2xl font-semibold\">\r\n                                    {displayName}\r\n                                </h1>\r\n                                <p className=\"text-lg\">{/* Job Title */}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* grid with two columns responsive also */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:px-4\">\r\n                <div className=\"col-span-1\">\r\n                    <form\r\n                        onSubmit={handleUpdate}\r\n                        className=\"flex flex-col gap-4\"\r\n                    >\r\n                        <h2 className=\"text-2xl font-bold text-gray-500\">\r\n                            Profile Details\r\n                        </h2>\r\n                        <p className=\"text-gray-500\">\r\n                            Change your profile details\r\n                        </p>\r\n\r\n                        {errors.general && errors.form === 'update' && (\r\n                            <Alert\r\n                                severity={errors.type}\r\n                                onClose={() =>\r\n                                    setErrors({ ...errors, general: '' })\r\n                                }\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                {errors.general}\r\n                            </Alert>\r\n                        )}\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"displayName\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Display Name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"displayName\"\r\n                                name=\"displayName\"\r\n                                value={state.displayName}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.displayName ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.displayName && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.displayName}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label htmlFor=\"email\" className=\"text-gray-500\">\r\n                                Email\r\n                            </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.email ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.email && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.email}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label htmlFor=\"country\" className=\"text-gray-500\">\r\n                                Country\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"_country\"\r\n                                name=\"country\"\r\n                                value={state.country}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.country ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.country && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.country}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label htmlFor=\"location\" className=\"text-gray-500\">\r\n                                Address / location\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"_location\"\r\n                                name=\"location\"\r\n                                value={state.location}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.location ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.location && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.location}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"phoneNumber\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Phone Number\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"phone_Number\"\r\n                                name=\"phoneNumber\"\r\n                                value={state.phoneNumber}\r\n                                onChange={handleChange}\r\n                                className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                    errors.phoneNumber ? 'border-red-500' : ''\r\n                                }`}\r\n                            />\r\n                            {errors.phoneNumber && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.phoneNumber}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* button */}\r\n                        <div className=\"mt-4 flex items-center gap-2\">\r\n                            {loading.update ? (\r\n                                <Loader width={200} height={200} />\r\n                            ) : (\r\n                                <button\r\n                                    className=\"bg-green-700 text-white px-4 py-2 rounded-md\"\r\n                                    onClick={handleUpdate}\r\n                                >\r\n                                    Save Changes\r\n                                </button>\r\n                            )}\r\n\r\n                            {/* if state is in intial state dont show else show */}\r\n                            {checks.update && (\r\n                                <button\r\n                                    className=\"bg-gray-500 text-white px-4 py-2 rounded-md\"\r\n                                    onClick={clearChange}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-span-1\">\r\n                    <form className=\"flex flex-col gap-4\">\r\n                        <h2 className=\"text-2xl font-bold text-gray-500\">\r\n                            Password & Security Reset\r\n                        </h2>\r\n                        <p className=\"text-gray-500\">Change your password</p>\r\n\r\n                        {errors.general && errors.form === 'pwd' && (\r\n                            <Alert\r\n                                severity={errors.type}\r\n                                onClose={() =>\r\n                                    setErrors({ ...errors, general: '' })\r\n                                }\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                {errors.general}\r\n                            </Alert>\r\n                        )}\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"newPassword\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Old Password\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={\r\n                                        showPassword['oldpassword']\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                    }\r\n                                    id=\"oldpassword\"\r\n                                    name=\"oldPassword\"\r\n                                    value={state.oldPassword}\r\n                                    onChange={handleChange}\r\n                                    className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                        errors.oldpassword\r\n                                            ? 'border-red-500'\r\n                                            : ''\r\n                                    }`}\r\n                                />\r\n                                <div\r\n                                    onClick={() =>\r\n                                        togglePasswordVisibility('oldpassword')\r\n                                    }\r\n                                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5 cursor-pointer\"\r\n                                >\r\n                                    {showPassword['oldpassword'] ? (\r\n                                        <Visibility />\r\n                                    ) : (\r\n                                        <VisibilityOff />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {errors.oldpassword && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.oldpassword}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"newPassword\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                New Password\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={\r\n                                        showPassword['newPassword']\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                    }\r\n                                    id=\"newPassword\"\r\n                                    name=\"newPassword\"\r\n                                    value={state.newPassword}\r\n                                    onChange={handleChange}\r\n                                    className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                        errors.newPassword\r\n                                            ? 'border-red-500'\r\n                                            : ''\r\n                                    }`}\r\n                                />\r\n                                <div\r\n                                    onClick={() =>\r\n                                        togglePasswordVisibility('newPassword')\r\n                                    }\r\n                                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5 cursor-pointer\"\r\n                                >\r\n                                    {showPassword['newPassword'] ? (\r\n                                        <Visibility />\r\n                                    ) : (\r\n                                        <VisibilityOff />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {errors.newPassword && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.newPassword}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <label\r\n                                htmlFor=\"confirmPassword\"\r\n                                className=\"text-gray-500\"\r\n                            >\r\n                                Confirm Password\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={\r\n                                        showPassword['confirmPassword']\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                    }\r\n                                    id=\"confirmPassword\"\r\n                                    name=\"confirmPassword\"\r\n                                    value={state.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                    className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 ${\r\n                                        errors.confirmPassword\r\n                                            ? 'border-red-500'\r\n                                            : ''\r\n                                    }`}\r\n                                />\r\n                                <div\r\n                                    onClick={() =>\r\n                                        togglePasswordVisibility(\r\n                                            'confirmPassword'\r\n                                        )\r\n                                    }\r\n                                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5 cursor-pointer\"\r\n                                >\r\n                                    {showPassword['confirmPassword'] ? (\r\n                                        <Visibility />\r\n                                    ) : (\r\n                                        <VisibilityOff />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            {errors.confirmPassword && (\r\n                                <p className=\"text-red-500 text-xs mt-1\">\r\n                                    {errors.confirmPassword}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* button */}\r\n                        <div className=\"mt-4\">\r\n                            <button\r\n                                onClick={handlePwdChange}\r\n                                className=\"bg-red-700 text-white px-4 py-2 rounded-md\"\r\n                            >\r\n                                {loading.pwd ? (\r\n                                    <Loader width={200} height={200} />\r\n                                ) : (\r\n                                    ' Reset password'\r\n                                )}\r\n                            </button>\r\n\r\n                            {checks.pwd && (\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"bg-gray-500 text-white px-4 py-2 rounded-md ml-4\"\r\n                                    onClick={clearPwdChange}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    ) : (\r\n        <SettingsSkeleton />\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.5 5.6 10 7 8.6 4.5 10 2 7.5 3.4 5 2l1.4 2.5L5 7zm12 9.8L17 14l1.4 2.5L17 19l2.5-1.4L22 19l-1.4-2.5L22 14zM22 2l-2.5 1.4L17 2l1.4 2.5L17 7l2.5-1.4L22 7l-1.4-2.5zm-7.63 5.29a.9959.9959 0 0 0-1.41 0L1.29 18.96c-.39.39-.39 1.02 0 1.41l2.34 2.34c.39.39 1.02.39 1.41 0L16.7 11.05c.39-.39.39-1.02 0-1.41l-2.33-2.35zm-1.03 5.49-2.12-2.12 2.44-2.44 2.12 2.12-2.44 2.44z\"\n}), 'AutoFixHigh');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["dispatch","useDispatch","photoURL","useSelector","state","auth","user","userId","uid","displayName","email","country","location","phoneNumber","_useState","useState","oldPassword","newPassword","confirmPassword","_useState2","_slicedToArray","setState","_useState3","update","pwd","_useState4","checks","setChecks","_useState5","delete","upload","_useState6","loading","setLoading","_useState7","_useState8","errors","setErrors","_useState9","_useState10","showPassword","setShowPassword","togglePasswordVisibility","id","_objectSpread","_defineProperty","clearPwdChange","handleChange","e","_e$target","target","name","value","newState","handleErrors","some","field","_e$target2","trim","concat","test","length","validateField","handleUpdate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","wrap","_context","prev","next","preventDefault","Object","values","Boolean","updateUserDetails","general","type","form","payload","t0","console","log","message","stop","_x","apply","arguments","handlePwdChange","_ref2","_callee2","_context2","changePassword","then","res","success","catch","err","finish","_x2","randomBannerColor","color","i","Math","floor","random","getRandomColor","handleAvatarUpload","_ref3","_callee3","event","file","_context3","files","abrupt","prevLoading","uploadProfilePicture","URL","createObjectURL","_x3","currentUser","_jsxs","Page","title","children","_jsx","Alert","className","severity","onClose","sx","mt","style","backgroundColor","onClick","document","getElementById","click","Loader","width","height","AutoFixHighIcon","accept","onChange","Avatar","alt","src","onSubmit","htmlFor","oldpassword","Visibility","VisibilityOff","SettingsSkeleton","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}