{"version":3,"file":"static/js/244.3fc8bac6.chunk.js","mappings":"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","sources":["views/Home/Home.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Page from '../../layout/Page'\r\nimport { PostCard } from '../../components'\r\nimport { getPosts } from '../../backend/posts'\r\nimport { TopNav } from '../../components'\r\nimport { Loader } from '../../components/icons/Icons'\r\nimport Skeleton from '@mui/material/Skeleton'\r\nimport { auth } from '../../config/firebase'\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const categories = useSelector((state) => state.categories.categories)\r\n    const reload = useSelector((state) => state.actionReducer.reload)\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const handleCategory = (category) => (event) => {\r\n        event.preventDefault()\r\n        dispatch({\r\n            type: 'SET_CATEGORIES',\r\n            payload: category,\r\n        })\r\n    }\r\n\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false)\r\n    const [fetchedPosts, setFetchedPosts] = useState([])\r\n    const bottomBoundaryRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        // Define the update callback\r\n        const updateCallback = (posts) => {\r\n            // Convert user field in the array of posts to an object\r\n            const resArray = posts.map((post) => {\r\n                return {\r\n                    ...post,\r\n                    user: {\r\n                        ...post.user,\r\n                    },\r\n                }\r\n            })\r\n\r\n            // Include displayName from user object in the array of posts\r\n            resArray.forEach((post) => {\r\n                post.displayName = post.user.displayName\r\n                post.photoURL = post.user.photoURL\r\n                post.phoneNumber = post.user.phoneNumber\r\n            })\r\n\r\n            setFetchedPosts((prevPosts) => [...prevPosts, ...resArray]) // corrected here\r\n\r\n            setIsLoadingMore(false)\r\n        }\r\n\r\n        // Call getPosts with the update callback\r\n        getPosts(updateCallback)\r\n\r\n        // Intersection observer for infinite scrolling\r\n        const scrollObserver = new IntersectionObserver(\r\n            async (entries) => {\r\n                if (entries[0].isIntersecting) {\r\n                    setIsLoadingMore(true)\r\n                    await getPosts(updateCallback)\r\n                }\r\n            },\r\n            { threshold: 1 }\r\n        )\r\n\r\n        if (bottomBoundaryRef.current) {\r\n            scrollObserver.observe(bottomBoundaryRef.current)\r\n        }\r\n\r\n        return () => {\r\n            if (bottomBoundaryRef.current) {\r\n                scrollObserver.unobserve(bottomBoundaryRef.current)\r\n            }\r\n        }\r\n    }, [reload])\r\n\r\n    useEffect(() => {\r\n        const uniquePosts = Array.from(\r\n            new Set(fetchedPosts.map((post) => post.id))\r\n        ).map((id) => fetchedPosts.find((post) => post.id === id))\r\n        setPosts(uniquePosts)\r\n    }, [fetchedPosts])\r\n\r\n    const filteredPosts = posts.filter((post) => post.type === categories)\r\n\r\n    return (\r\n        <Page>\r\n            <div className=\"flex flex-col items-center gap-4\">\r\n                <div className=\"w-full max-w-3xl\">\r\n                    {window.location.pathname === '/' &&\r\n                        (auth?.currentUser === null ? (\r\n                            <div className=\"inline-flex md:hidden mb-4 w-full justify-center\">\r\n                                <Skeleton\r\n                                    width={200}\r\n                                    height={40}\r\n                                    variant=\"rectangular\"\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"inline-flex md:hidden mb-4 w-full justify-center\">\r\n                                <TopNav\r\n                                    handleCategory={handleCategory}\r\n                                    categories={categories}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    <PostCard\r\n                        post={filteredPosts}\r\n                        comment={false}\r\n                        quantity={true}\r\n                    />\r\n                </div>\r\n                <div ref={bottomBoundaryRef}></div>\r\n                {isLoadingMore && (\r\n                    <div className=\"w-full flex justify-center items-center  mb-2\">\r\n                        <Loader width={65} height={65} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"],"names":["dispatch","useDispatch","categories","useSelector","state","reload","actionReducer","_useState","useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","isLoadingMore","setIsLoadingMore","_useState5","_useState6","fetchedPosts","setFetchedPosts","bottomBoundaryRef","useRef","useEffect","updateCallback","resArray","map","post","_objectSpread","user","forEach","displayName","photoURL","phoneNumber","prevPosts","concat","_toConsumableArray","getPosts","scrollObserver","IntersectionObserver","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","entries","wrap","_context","prev","next","isIntersecting","stop","_x","apply","arguments","threshold","current","observe","unobserve","uniquePosts","Array","from","Set","id","find","filteredPosts","filter","type","_jsx","Page","children","_jsxs","className","window","location","pathname","auth","currentUser","Skeleton","width","height","variant","TopNav","handleCategory","category","event","preventDefault","payload","PostCard","comment","quantity","ref","Loader"],"sourceRoot":""}