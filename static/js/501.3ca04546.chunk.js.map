{"version":3,"file":"static/js/501.3ca04546.chunk.js","mappings":"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","sources":["components/upDateDetails/UpdateDetails.jsx","layout/Page.jsx","views/Forum/Forum.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Slide } from '@mui/material'\r\nimport { useSelector } from 'react-redux'\r\nimport Comintro from '../../assets/images/comintro.jpg'\r\nimport { updateUserDetails } from '../../backend/auth'\r\n\r\n// Define the transition styles\r\nconst TransitionSlide = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />\r\n})\r\n\r\nconst UpdateDetails = ({ open, handleClose }) => {\r\n    const uid = useSelector((state) => state.auth.user.uid)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [errors, setErrors] = useState({})\r\n    const [values, setValues] = useState({\r\n        country: '',\r\n        location: '',\r\n        phoneNumber: '',\r\n    })\r\n\r\n    const validateField = (id, value) => {\r\n        let error = ''\r\n        if (value.trim() === '') {\r\n            error = 'This field is required'\r\n        } else if (\r\n            id === 'phoneNumber' &&\r\n            (!/^\\+?[1-9]\\d{1,14}$/.test(value) || value.length < 10)\r\n        ) {\r\n            error =\r\n                'Please enter a valid phone number with at least 10 digits e.g+256xxxx'\r\n        }\r\n        return error\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        const error = validateField(id, value)\r\n        setValues((prevValues) => ({ ...prevValues, [id]: value }))\r\n        setErrors((prevErrors) => ({ ...prevErrors, [id]: error }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        // Validate fields before submitting\r\n        let isValid = true\r\n        const newErrors = {}\r\n        for (let field in values) {\r\n            const error = validateField(field, values[field])\r\n            newErrors[field] = error\r\n            if (error) {\r\n                isValid = false\r\n            }\r\n        }\r\n        setErrors(newErrors)\r\n\r\n        // If no errors, submit the form\r\n        if (isValid) {\r\n            setDisabled(true)\r\n            updateUserDetails(uid, values)\r\n                .then(() => {\r\n                    handleClose()\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    setDisabled(false)\r\n                })\r\n        } else {\r\n            console.log('Invalid form submission')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                margin: 0,\r\n                padding: '10px',\r\n                display: open ? 'block' : 'none',\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                zIndex: 9999,\r\n            }}\r\n        >\r\n            <TransitionSlide in={open}>\r\n                <div\r\n                    style={{\r\n                        backgroundColor: 'white',\r\n                        maxWidth: '850px',\r\n                        width: '100%',\r\n                        height: 'auto',\r\n                        margin: '50px auto',\r\n                        borderRadius: '10px',\r\n                    }}\r\n                >\r\n                    <div className=\"lg:grid lg:grid-cols-2 lg:gap-0 p-0 m-0 w-full\">\r\n                        <div\r\n                            style={{\r\n                                height: window.innerWidth <= 768 ? '200px' : '',\r\n                            }}\r\n                            className=\"flex-1 relative lg:h-auto\"\r\n                        >\r\n                            <img\r\n                                style={{\r\n                                    height:\r\n                                        window.innerWidth <= 768 ? '200px' : '',\r\n                                }}\r\n                                src={Comintro}\r\n                                alt=\"Community\"\r\n                                className=\"w-full h-auto object-cover\"\r\n                            />\r\n                            <div\r\n                                style={{\r\n                                    display:\r\n                                        window.innerWidth <= 768 ? 'none' : '',\r\n                                    background:\r\n                                        window.innerWidth <= 768\r\n                                            ? ''\r\n                                            : 'linear-gradient(to top, rgba(28,39,76,0.8) 40%, rgba(28,39,76,0) 100%)',\r\n                                }}\r\n                                className=\"xs:bg-gradient-to-t from-blue-900 via-blue-900 to-transparent lg:bg-gradient-to-t lg:absolute lg:bottom-0 lg:right-0 text-white p-5 text-3xl\"\r\n                            >\r\n                                Thank you for joining our community! Please\r\n                                update your details before proceeding.\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{\r\n                                flex: window.innerWidth <= 768 ? '' : '1 1 50%',\r\n                                padding: window.innerWidth <= 768 ? '' : '1em',\r\n                            }}\r\n                        >\r\n                            <form\r\n                                style={{\r\n                                    padding:\r\n                                        window.innerWidth <= 768 ? '1em' : '',\r\n                                }}\r\n                                onSubmit={handleSubmit}\r\n                            >\r\n                                <h2\r\n                                    style={{\r\n                                        color: 'black',\r\n                                        marginBottom: '1em',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    <span\r\n                                        style={{\r\n                                            fontWeight: 'bold',\r\n                                            fontSize: '1.5em',\r\n                                            textAlign: 'left',\r\n                                            textTransform: 'uppercase',\r\n                                            letterSpacing: '0.1em',\r\n                                            lineHeight: '1.0em',\r\n                                        }}\r\n                                    >\r\n                                        Welcome to Our Community!\r\n                                    </span>\r\n                                    <small className=\"mt-2\">\r\n                                        Complete your profile to continue.\r\n                                    </small>\r\n                                </h2>\r\n                                <div\r\n                                    style={{\r\n                                        marginBottom:\r\n                                            window.innerWidth <= 768\r\n                                                ? ''\r\n                                                : '5px',\r\n                                    }}\r\n                                >\r\n                                    <label\r\n                                        htmlFor=\"country\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        Country\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"country\"\r\n                                        value={values.country}\r\n                                        onChange={handleChange}\r\n                                        className={`block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 ${\r\n                                            errors.country\r\n                                                ? 'border-red-500'\r\n                                                : ''\r\n                                        }`}\r\n                                        onBlur={(e) =>\r\n                                            validateField(\r\n                                                e.target.id,\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                    {errors.country && (\r\n                                        <small style={{ color: 'red' }}>\r\n                                            {errors.country}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        marginBottom:\r\n                                            window.innerWidth <= 768\r\n                                                ? ''\r\n                                                : '5px',\r\n                                    }}\r\n                                >\r\n                                    <label\r\n                                        htmlFor=\"location\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        Address / location\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"location\"\r\n                                        value={values.location}\r\n                                        onChange={handleChange}\r\n                                        className={`block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 ${\r\n                                            errors.location\r\n                                                ? 'border-red-500'\r\n                                                : ''\r\n                                        }`}\r\n                                        onBlur={(e) =>\r\n                                            validateField(\r\n                                                e.target.id,\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                    {errors.location && (\r\n                                        <small style={{ color: 'red' }}>\r\n                                            {errors.location}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        marginBottom:\r\n                                            window.innerWidth <= 768\r\n                                                ? ''\r\n                                                : '5px',\r\n                                    }}\r\n                                >\r\n                                    <label\r\n                                        htmlFor=\"phoneNumber\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        Phone Number\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        id=\"phoneNumber\"\r\n                                        value={values.phoneNumber}\r\n                                        onChange={handleChange}\r\n                                        className={`block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 ${\r\n                                            errors.phoneNumber\r\n                                                ? 'border-red-500'\r\n                                                : ''\r\n                                        }`}\r\n                                        onBlur={(e) =>\r\n                                            validateField(\r\n                                                e.target.id,\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                    {errors.phoneNumber && (\r\n                                        <small style={{ color: 'red' }}>\r\n                                            {errors.phoneNumber}\r\n                                        </small>\r\n                                    )}\r\n                                </div>\r\n                                {/* Add more fields as necessary */}\r\n                                <div className=\"flex justify-end w-full\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className={`${\r\n                                            disabled\r\n                                                ? 'bg-gray-400 cursor-not-allowed'\r\n                                                : 'bg-green-600 hover:bg-green-700'\r\n                                        } w-full py-2 mt-4 text-sm font-medium text-white transition duration-300 ease-in-out transform rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500`}\r\n                                    >\r\n                                        Update Details\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </TransitionSlide>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateDetails\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { checkIfUserHasPhoneNumber } from '../backend/auth'\r\nimport UpdateDetails from '../components/upDateDetails/UpdateDetails'\r\n\r\nconst TopBar = React.lazy(() => import('../components/topBar/TopBar'))\r\nconst SideBar = React.lazy(() => import('../components/sideBar/SideBar'))\r\n\r\nconst Page = ({ children, title }) => {\r\n    const [showSideBar, setShowSideBar] = useState(false)\r\n    const uid = useSelector((state) => state.auth?.user?.uid)\r\n    const token = useSelector((state) => state.auth?.accessToken?.token)\r\n    const anonymous = useSelector((state) => state.auth?.accessToken?.anonymous)\r\n    const [updateDetailsModal, setUpdateDetailsModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false\r\n\r\n        const fetchUserDetails = async () => {\r\n            if (uid && token && !anonymous) {\r\n                const res = await checkIfUserHasPhoneNumber(uid)\r\n                if (!isCancelled && res && !res.hasPhoneNumber) {\r\n                    setUpdateDetailsModal(true)\r\n                } else {\r\n                    setUpdateDetailsModal(false)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchUserDetails()\r\n\r\n        return () => {\r\n            isCancelled = true\r\n        }\r\n    }, [uid, token, anonymous])\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            if (window.innerWidth < 640 && !showSideBar) {\r\n                setShowSideBar(true)\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [showSideBar])\r\n\r\n    return (\r\n        <>\r\n            <TopBar\r\n                onClick={() => setShowSideBar(!showSideBar)}\r\n                value={showSideBar}\r\n            />\r\n            <SideBar show={showSideBar} setShowSideBar={setShowSideBar} />\r\n            <div className={`p-4 sm:ml-64`}>\r\n                <div className=\"mt-20 lg:mt-14 h-full lg:mx-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        {title && (\r\n                            <h1 className=\"text-lg lg:text-4xl font-bold text-gray-800 dark:text-white\">\r\n                                {title}\r\n                            </h1>\r\n                        )}\r\n                    </div>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n            {!anonymous && token && (\r\n                <UpdateDetails\r\n                    open={updateDetailsModal}\r\n                    handleClose={() => setUpdateDetailsModal(false)}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Page\r\n","import React, { useEffect, useState } from 'react'\r\nimport Page from '../../layout/Page'\r\nimport { getPosts } from '../../backend/posts'\r\nimport { PostCard } from '../../components'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Forum = () => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const reload = useSelector((state) => state.actionReducer.reload)\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n\r\n        // Define the update callback\r\n        const updateCallback = (posts) => {\r\n            // Convert user field in the array of posts to an object\r\n            const resArray = posts.map((post) => {\r\n                return {\r\n                    ...post,\r\n                    user: {\r\n                        ...post.user,\r\n                    },\r\n                }\r\n            })\r\n\r\n            // Include displayName from user object in the array of posts\r\n            resArray.forEach((post) => {\r\n                post.displayName = post.user.displayName\r\n                post.photoURL = post.user.photoURL\r\n                post.phoneNumber = post.user.phoneNumber\r\n            })\r\n\r\n            setPosts(resArray)\r\n            setIsLoading(false)\r\n        }\r\n\r\n        // Call getPosts with the update callback\r\n        const unsubscribe = getPosts(updateCallback)\r\n\r\n        // Return cleanup function to stop listening to updates when component unmounts\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [reload])\r\n\r\n    return (\r\n        <Page>\r\n            <div className=\"max-w-3xl mx-auto\">\r\n                <div className=\"col-span-2 md:col-span-2 gap-4 h-screen\">\r\n                    <PostCard post={posts} comment={true} loading={isLoading} />\r\n                </div>\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Forum\r\n"],"names":["TransitionSlide","React","props","ref","_jsx","Slide","_objectSpread","direction","_ref","open","handleClose","uid","useSelector","state","auth","user","_useState","useState","_useState2","_slicedToArray","disabled","setDisabled","_useState3","_useState4","errors","setErrors","_useState5","country","location","phoneNumber","_useState6","values","setValues","validateField","id","value","error","trim","test","length","handleChange","e","_e$target","target","prevValues","_defineProperty","prevErrors","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","isValid","newErrors","field","wrap","_context","prev","next","preventDefault","updateUserDetails","then","catch","err","console","log","stop","_x","apply","arguments","style","margin","padding","display","position","top","left","width","height","backgroundColor","zIndex","children","in","maxWidth","borderRadius","_jsxs","className","window","innerWidth","src","Comintro","alt","background","flex","onSubmit","color","marginBottom","flexDirection","fontWeight","fontSize","textAlign","textTransform","letterSpacing","lineHeight","htmlFor","type","onChange","concat","onBlur","TopBar","SideBar","title","showSideBar","setShowSideBar","_state$auth","_state$auth$user","token","_state$auth2","_state$auth2$accessTo","accessToken","anonymous","_state$auth3","_state$auth3$accessTo","updateDetailsModal","setUpdateDetailsModal","useEffect","isCancelled","fetchUserDetails","res","checkIfUserHasPhoneNumber","sent","hasPhoneNumber","handleResize","addEventListener","removeEventListener","_Fragment","onClick","show","UpdateDetails","isLoading","setIsLoading","reload","actionReducer","posts","setPosts","unsubscribe","getPosts","resArray","map","post","forEach","displayName","photoURL","Page","PostCard","comment","loading"],"sourceRoot":""}