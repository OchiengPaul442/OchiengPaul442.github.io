{"version":3,"file":"static/js/151.71d4101a.chunk.js","mappings":"oPAyFA,UAlFc,WACV,IAAMA,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,cAAcH,MAAM,IAChEI,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,GAA0CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAwCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAqBC,EAAAA,EAAAA,QAAO,MA2DlC,OAzDAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAiB,SAACb,GAEpB,IAAMc,EAAWd,EAAMe,KAAI,SAACC,GACxB,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOD,GAAI,IACPE,MAAID,EAAAA,EAAAA,GAAA,GACGD,EAAKE,OAGpB,IAGAJ,EAASK,SAAQ,SAACH,GACdA,EAAKI,YAAcJ,EAAKE,KAAKE,YAC7BJ,EAAKK,SAAWL,EAAKE,KAAKG,SAC1BL,EAAKM,YAAcN,EAAKE,KAAKI,WACjC,IAEAb,GAAgB,SAACc,GAAS,SAAAC,QAAAC,EAAAA,EAAAA,GAASF,IAASE,EAAAA,EAAAA,GAAKX,GAAQ,IAEzDT,GAAiB,EACrB,GAGAqB,EAAAA,EAAAA,IAASb,GAGT,IAAMc,EAAiB,IAAIC,qBAAoB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAC3C,SAAAC,EAAOC,GAAO,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACNJ,EAAQ,GAAGK,eAAe,CAADH,EAAAE,KAAA,QACH,OAAtBjC,GAAiB,GAAK+B,EAAAE,KAAA,GAChBZ,EAAAA,EAAAA,IAASb,GAAe,wBAAAuB,EAAAI,OAAA,GAAAP,EAAA,KAErC,gBAAAQ,GAAA,OAAAZ,EAAAa,MAAA,KAAAC,UAAA,EAN0C,GAO3C,CAAEC,UAAW,IAOjB,OAJIlC,EAAmBmC,SACnBlB,EAAemB,QAAQpC,EAAmBmC,SAGvC,WACCnC,EAAmBmC,SACnBlB,EAAeoB,UAAUrC,EAAmBmC,QAEpD,CACJ,GAAG,CAACrD,KAEJoB,EAAAA,EAAAA,YAAU,WACN,IAAMoC,EAAcC,MAAMC,KACtB,IAAIC,IAAI3C,EAAaO,KAAI,SAACC,GAAI,OAAKA,EAAKoC,EAAE,MAC5CrC,KAAI,SAACqC,GAAE,OAAK5C,EAAa6C,MAAK,SAACrC,GAAI,OAAKA,EAAKoC,KAAOA,CAAE,GAAC,IACzDnD,EAAS+C,EACb,GAAG,CAACxC,KAGA8C,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAC,UACDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBF,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iCAAgCF,UAC3CF,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CAAC3C,KAAMhB,EAAO4D,SAAS,OAEpCN,EAAAA,EAAAA,KAAA,OAAKO,IAAKnD,IACTN,IACGkD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gDAA+CF,UAC1DF,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CAACC,MAAO,GAAIC,OAAQ,WAMnD,C","sources":["views/Forum/Forum.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport Page from '../../layout/Page'\r\nimport { getPosts } from '../../backend/posts'\r\nimport { PostCard } from '../../components'\r\nimport { useSelector } from 'react-redux'\r\nimport { Loader } from '../../components/icons/Icons'\r\n\r\nconst Forum = () => {\r\n    const reload = useSelector((state) => state.actionReducer.reload)\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false)\r\n    const [fetchedPosts, setFetchedPosts] = useState([])\r\n    const bottomBoundaryRef2 = useRef(null)\r\n\r\n    useEffect(() => {\r\n        // Define the update callback\r\n        const updateCallback = (posts) => {\r\n            // Convert user field in the array of posts to an object\r\n            const resArray = posts.map((post) => {\r\n                return {\r\n                    ...post,\r\n                    user: {\r\n                        ...post.user,\r\n                    },\r\n                }\r\n            })\r\n\r\n            // Include displayName from user object in the array of posts\r\n            resArray.forEach((post) => {\r\n                post.displayName = post.user.displayName\r\n                post.photoURL = post.user.photoURL\r\n                post.phoneNumber = post.user.phoneNumber\r\n            })\r\n\r\n            setFetchedPosts((prevPosts) => [...prevPosts, ...resArray]) // corrected here\r\n\r\n            setIsLoadingMore(false)\r\n        }\r\n\r\n        // Call getPosts with the update callback\r\n        getPosts(updateCallback)\r\n\r\n        // Intersection observer for infinite scrolling\r\n        const scrollObserver = new IntersectionObserver(\r\n            async (entries) => {\r\n                if (entries[0].isIntersecting) {\r\n                    setIsLoadingMore(true)\r\n                    await getPosts(updateCallback)\r\n                }\r\n            },\r\n            { threshold: 1 }\r\n        )\r\n\r\n        if (bottomBoundaryRef2.current) {\r\n            scrollObserver.observe(bottomBoundaryRef2.current)\r\n        }\r\n\r\n        return () => {\r\n            if (bottomBoundaryRef2.current) {\r\n                scrollObserver.unobserve(bottomBoundaryRef2.current)\r\n            }\r\n        }\r\n    }, [reload])\r\n\r\n    useEffect(() => {\r\n        const uniquePosts = Array.from(\r\n            new Set(fetchedPosts.map((post) => post.id))\r\n        ).map((id) => fetchedPosts.find((post) => post.id === id))\r\n        setPosts(uniquePosts)\r\n    }, [fetchedPosts])\r\n\r\n    return (\r\n        <Page>\r\n            <div className=\"max-w-3xl mx-auto pb-2\">\r\n                <div className=\"col-span-2 md:col-span-2 gap-4\">\r\n                    <PostCard post={posts} comment={true} />\r\n                </div>\r\n                <div ref={bottomBoundaryRef2}></div>\r\n                {isLoadingMore && (\r\n                    <div className=\"w-full flex justify-center items-center  mb-2\">\r\n                        <Loader width={65} height={65} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Forum\r\n"],"names":["reload","useSelector","state","actionReducer","_useState","useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","isLoadingMore","setIsLoadingMore","_useState5","_useState6","fetchedPosts","setFetchedPosts","bottomBoundaryRef2","useRef","useEffect","updateCallback","resArray","map","post","_objectSpread","user","forEach","displayName","photoURL","phoneNumber","prevPosts","concat","_toConsumableArray","getPosts","scrollObserver","IntersectionObserver","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","entries","wrap","_context","prev","next","isIntersecting","stop","_x","apply","arguments","threshold","current","observe","unobserve","uniquePosts","Array","from","Set","id","find","_jsx","Page","children","_jsxs","className","PostCard","comment","ref","Loader","width","height"],"sourceRoot":""}